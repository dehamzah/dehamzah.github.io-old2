{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/comprehensive-theming-on-openedx","result":{"data":{"post":{"__typename":"MdxPost","slug":"/comprehensive-theming-on-openedx","title":"Comprehensive Theming on Open edX","date":"05.09.2016","tags":[{"name":"openedx","slug":"openedx"}],"description":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Comprehensive Theming on Open edX\",\n  \"date\": \"2016-09-05T00:00:00.000Z\",\n  \"slug\": \"/comprehensive-theming-on-openedx\",\n  \"tags\": [\"openedx\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"How to change the look of Open edX, as far as i know, there is 2 methods possible, stanford theming, and comprehensive theming method. The first one soon will be obesolate, and we should start using the comprehensive method to change how the Open edX looks. The existing documentation for this comprehensive theme is quite good enough but not yet give some clue to newcomer like me to activate the theme (per this post is written).\"), mdx(\"p\", null, \"My post here mostly takes from Open edX documentation \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://edx.readthedocs.io/projects/edx-installing-configuring-and-running/en/latest/configuration/theming/index.html\"\n  }), \"here\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/edx/edx-platform/tree/master/themes\"\n  }), \"here\"), \", plus my experience when developing a theme for \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://indonesiax.co.id\"\n  }), \"IndonesiaX\"), \".\"), mdx(\"p\", null, \"Comprehensive Theming, like the documentation said, it lets us to customize the appearance of our Open edX installation. We can override Sass/CSS, images, or entire HTML templates. In this guide, i will be using Open edX \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"eucalyptus\"), \" as code base.\"), mdx(\"h2\", null, \"Creating the Theme\"), mdx(\"h3\", null, \"Theme Structure\"), mdx(\"p\", null, \"A theme is a directory of assets. The top directory is our theme name. I use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"starter-theme\"), \" as our example. The structure theme here, basicly must mimic the edx-platform theme structure. Files that we create on our theme here will overwrite the default files in edx-platform repo. So the concept is, if you want override something, just copy the default files from edx-platform repo to our theme, and start making changes from copied files.\"), mdx(\"p\", null, \"Here is the example file structure :\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"starter-theme\\n\\u2514\\u2500\\u2500 lms\\n    \\u251C\\u2500\\u2500 static\\n    \\u2502   \\u251C\\u2500\\u2500 images\\n    \\u2502   \\u2502   \\u2514\\u2500\\u2500 logo.png\\n    \\u2502   \\u2514\\u2500\\u2500 sass\\n    \\u2502       \\u251C\\u2500\\u2500 _overrides.scss\\n    \\u2502       \\u251C\\u2500\\u2500 lms-main-v1-rtl.scss\\n    \\u2502       \\u2514\\u2500\\u2500 lms-main-v1.scss\\n    \\u2514\\u2500\\u2500 templates\\n        \\u251C\\u2500\\u2500 footer.html\\n        \\u2514\\u2500\\u2500 header.html\\n\")), mdx(\"h3\", null, \"HTML Templates\"), mdx(\"p\", null, \"As i said above, if want to make changes on html templates, just copy the default files, paste it to our theme templates folder and make some changes from there. Just take some notes, if we upgrade our Open edX to newer version, we may must refactor our custom template to using new Open edX templates.\"), mdx(\"h3\", null, \"SASS/CSS\"), mdx(\"p\", null, \"Styling in Open edX is done with Sass and then compiled to CSS. We can override the default style or add new css rules, by just mimic the file name in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"edx-platform/lms/static/sass/\"), \" folder. If we want to make some changes/add in css, here is the main sass file that i recommend to override:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"- `lms-main-v1.scss`        // For override main lms style\\n- `lms-main-v1-rtl.scss`    // For override main lms right-to-left style\\n- `lms-course.scss`         // For override style lms course\\n- `lms-course-rtl.scss`     // For override right-to-left style lms course\\n\")), mdx(\"p\", null, \"For example, if we just want to override main style, just create file named \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"lms-main-v1.scss\"), \" on our theme sass folder and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"_overrides.scss\"), \" for our simple custom sass, then add this line of code on top of the file:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"// Import the original styles from edx-platform.\\n@import 'lms/static/sass/lms-main-v1';\\n\\n// Our custom sass start here\\n@import 'overrides'\\n\")), mdx(\"p\", null, \"Import the original styles corresponding to sass file we overwrite.\"), mdx(\"h3\", null, \"Images\"), mdx(\"p\", null, \"If you want to replace images, just mimic the file name on edx-platform repo, and put it on folder images as structure above. If you want to add new images assets, put it there too. \"), mdx(\"p\", null, \"Here is the example code to call the images assets on our HTML templates:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"<img class=\\\"img-logo\\\" src=\\\"${static.url('starter-theme/images/logo.png')}\\\" height=\\\"50\\\" alt=\\\"Logo\\\" />\\n\")), mdx(\"p\", null, \"Or if you want to call it via CSS, write it like this:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"background-image: url(\\\"../starter-theme/images/logo.png\\\");\\n\")), mdx(\"h2\", null, \"Activating the Theme\"), mdx(\"p\", null, \"To use our new theme, we must configure some value and update the assets. Here is the steps:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Create folder \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"themes\"), \" on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/edx/app/edxapp/\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Put our new theme on that folder. So for this example our theme location will be \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/edx/app/edxapp/themes/starter-theme\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Make some changes in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"lms.env.json\"), \" located in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/edx/app/edxapp/\"), \". Then change some variables to this:\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"ENABLE_COMPREHENSIVE_THEMING: true,\\nCOMPREHENSIVE_THEME_DIRS: [\\\"/edx/app/edxapp/themes\\\"],\\nDEFAULT_SITE_THEME: \\\"starter-theme\\\",\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Update the assets.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"$ sudo -H -u edxapp bash\\n$ source /edx/app/edxapp/edxapp_env\\n$ cd /edx/app/edxapp/edx-platform\\n$ paver update_assets lms --settings=aws\\n$ exit\\n\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"*p.s. If you are in development, i recommend you adding \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--debug\"), \" on command paver. This will compile the css to extended style and showing you the compile process in terminal, so you can debug your code when it failed to compile.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Restart the lms instance.\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"$ sudo /edx/bin/supervisorctl restart edxapp:lms\\n\")))), mdx(\"p\", null, \"Thats it. \"), mdx(\"p\", null, \"If you just want to test out this comprehensive theming, i had create a github repo for you to clone here:\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/dehamzah/starter-theme-openedx\"\n  }), \"https://github.com/dehamzah/starter-theme-openedx\")), mdx(\"p\", null, \"I also create a simple bash script to update the assets on my gist \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://gist.github.com/dehamzah/0e9258ada87705791e4628e0e5aa9621\"\n  }), \"here\"), \".\"), mdx(\"p\", null, \"If you have some issues just comments below, maybe i can help or maybe other readers can help too.\"), mdx(\"p\", null, \"p.s. What if i already follow all these steps above but my Open edX theme still not changed?\"), mdx(\"p\", null, \"Try to login to django admin on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/admin\"), \" with superuser account.\\nThen go to Theming > Site Themes : \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/admin/theming/sitetheme/\"), \".\\nIn there add site theme, and put your theme name there.\\nIf you already compile your assets, you can try refreshing your Open edX homepage, it should be changed now.\"), mdx(\"hr\", null), mdx(\"p\", null, \"Note: I'm no longer developing open edx theme, if you have question, you should go to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://openedx.slack.com/\"\n  }), \"open edx slack channel\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"How to change the look of Open edX, as far as i know, there is 2 methods possible, stanford theming, and comprehensive theming method. The…","timeToRead":3,"banner":null}},"pageContext":{"slug":"/comprehensive-theming-on-openedx","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["318001574","3787687951","3787687951"]}